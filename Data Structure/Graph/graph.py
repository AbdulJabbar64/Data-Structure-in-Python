# -*- coding: utf-8 -*-
"""Graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KIw1kSxnvcCD8xN5ewhU9SUZ_5tMJDIC

### Implementation of Graph through Adjacency List
"""

class Graph:

  def __init__(self):
    self.numberofnodes = 0
    self.adjacentlist = {}

  def __str__(self):
    return str(self.adjacentlist)
  
  def addVertex(self,node):
    self.adjacentlist[node] = []
    self.numberofnodes += 1

  def addEdge(self,node1,node2):
    self.adjacentlist[node1].append(node2)
    self.adjacentlist[node2].append(node1)

  def showconnection(self):
    for i  in self.adjacentlist:
            print(i,'-->','  '.join([str(j) for j in self.adjacentlist[i]]))


myGraph = Graph()
myGraph.addVertex('0')
myGraph.addVertex('1')
myGraph.addVertex('2')
myGraph.addVertex('3')

myGraph.addEdge('0', '1') 
myGraph.addEdge('0', '2') 
myGraph.addEdge('1', '2') 
myGraph.addEdge('0', '3')
print(myGraph)
myGraph.showconnection()


